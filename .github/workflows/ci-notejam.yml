name: nodejam CI

# Triggers the workflow on push or pull request events
on: [push, pull_request]

#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master

defaults:
  run:
    working-directory: .

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots install
      - name: 'Tar files'
        run: tar -cvf app.tar target/*.jar
      - uses: actions/upload-artifact@v2
        with:
          name: app
          path: app.tar

  docker:
    runs-on: ubuntu-latest
    needs: build
#    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      # share artifact across jobs
      - uses: actions/download-artifact@v2
        with:
          name: app
      - name: 'Untar files'
        run: mkdir -p target && tar -xvf app.tar target
      # build + push docker img
      # credentials needed: https://github.com/aws-actions/amazon-ecr-login
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: notejam
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
